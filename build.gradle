plugins {
    id 'application'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

application {
    mainClass = "br.com.sicred.DesafioTecApplication"
}

dependencies{
    implementation project(":contract")
    testImplementation project(":impl")
    testImplementation project(":commons")
    testImplementation project(":integration-cpf-validator")
}


allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'jacoco'


    group = 'br.com.sicred'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        all {
            exclude module: 'slf4j-log4j12'
        }

        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        maven{
            url "https://packages.confluent.io/maven/"
        }

    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
        implementation 'com.google.code.gson:gson:2.8.9'

        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'io.confluent:kafka-avro-serializer:7.4.0'
        implementation 'org.apache.avro:avro:1.11.3'
        implementation 'junit:junit:4.13.1'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'io.springfox:springfox-swagger2:3.0.0'
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'io.springfox:springfox-swagger-ui:3.0.0'

        implementation 'io.swagger.core.v3:swagger-annotations:2.1.11'
        implementation 'io.swagger.core.v3:swagger-models:2.1.11'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
    }

    test {
        useJUnitPlatform()
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/model/*',
                    '**/mapper/*',
                    '**/repository/*',
                    '**/wrapper/*',
                    '**/enums/*'
            ])
        }))
    }

    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }

    subprojects.each {
        sourceSets it.sourceSets.main
    }
}

jar {
    enabled(false)
}
